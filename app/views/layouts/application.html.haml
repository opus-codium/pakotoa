!!!
%html
  %head
    %meta{ content: "text/html; charset=UTF-8", "http-equiv": "Content-Type" }/
    %title
      - if content_for?(:title)
        = content_for(:title) + " —"
      Pakotoa
    %meta{ content: "width=device-width,initial-scale=1", name: "viewport" }/
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag "application", "data-turbo-track": "reload"
    = javascript_importmap_tags
    /%link{ rel: "stylesheet", href: "https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css" }
    %meta{ name: "viewport", content: "width=device-width, initial-scale=1" }
  %body
    %nav.navbar.is-primary{ role: "navigation", aria: { label: "main navigation" } }
      .navbar-brand
        .navbar-item
          %strong.has-text-white Pakotoa
        %a.navbar-burger{ role: "button", aria: { label: "menu", expanded: "false" }, data: { target: "navMenu" } }
          %span{ aria: { hidden: "true" } }
          %span{ aria: { hidden: "true" } }
          %span{ aria: { hidden: "true" } }
      .navbar-menu
        .navbar-start
          = navbar_link_to t(".certificate_authorities"), certificate_authorities_path
          = navbar_link_to t(".policies"), policies_path
        .navbar-end
          - if user_signed_in?
            = link_to t(".sign_out"), destroy_user_session_path, data: { turbo_method: :delete }, class: "navbar-item"
          - else
            = navbar_link_to t(".sign_in"), new_user_session_path
    %section.section
      .container
        - if content_for?(:title)
          %h1.title= content_for(:title)
          %nav.breadcrumb
            %ul
              - if @breadcrumb
                - @breadcrumb.each do |part|
                  %li= link_to part[0], part[1]
              %li.is-active= link_to content_for(:title), "#"
        - if flash[:notice]
          .notification.is-success= flash[:notice]
        - if flash[:alert]
          .notification.is-danger= flash[:alert]
        = yield

    %footer.footer
      .content.has-text-centered
        %p
          %strong Pakotoa
          —
          = t("application.copyright_html")
